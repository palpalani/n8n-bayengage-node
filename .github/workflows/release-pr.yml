name: Release PR

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main]

jobs:
  validate-version:
    name: Validate Version Bump
    runs-on: ubuntu-latest
    if: startsWith(github.head_ref, 'release/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Check version bump
        run: |
          # Get current version from package.json
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "Current version: $CURRENT_VERSION"

          # Get version from main branch
          git fetch origin main
          MAIN_VERSION=$(git show origin/main:package.json | node -p "JSON.parse(require('fs').readFileSync('/dev/stdin', 'utf8')).version")
          echo "Main branch version: $MAIN_VERSION"

          # Verify version was bumped
          if [ "$CURRENT_VERSION" = "$MAIN_VERSION" ]; then
            echo "Error: Version was not bumped in package.json"
            exit 1
          fi

          echo "✓ Version bump detected: $MAIN_VERSION → $CURRENT_VERSION"

      - name: Verify CHANGELOG update
        run: |
          if ! git diff --name-only origin/main HEAD | grep -q "README.md\|CHANGELOG.md"; then
            echo "Warning: Consider updating README.md or CHANGELOG.md for this release"
          else
            echo "✓ Documentation updated"
          fi

  pre-release-checks:
    name: Pre-release Checks
    runs-on: ubuntu-latest
    if: startsWith(github.head_ref, 'release/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run all tests
        run: npm run test:run

      - name: Run linting
        run: npm run lint

      - name: Build package
        run: npm run build

      - name: Test package installation
        run: |
          npm pack
          PACKAGE_FILE=$(ls *.tgz)
          echo "Testing installation of $PACKAGE_FILE"
          mkdir -p test-install
          cd test-install
          npm init -y
          npm install ../$PACKAGE_FILE
          echo "✓ Package installs successfully"
