{
  "name": "VIP Customer Flow",
  "nodes": [
    {
      "parameters": {
        "eventType": "contact.updated",
        "verifySignature": false
      },
      "id": "bayengage-trigger",
      "name": "Contact Updated Trigger",
      "type": "n8n-nodes-bayengage.bayEngageTrigger",
      "typeVersion": 1,
      "position": [240, 300],
      "webhookId": "vip-customer-trigger"
    },
    {
      "parameters": {
        "functionCode": "// Analyze contact data to determine VIP status\nconst contactData = items[0].json.data;\nconst currentDate = new Date();\n\n// Calculate VIP score based on multiple factors\nlet vipScore = 0;\nlet vipTier = 'standard';\nlet vipBenefits = [];\n\n// Lifetime value factor (40% weight)\nconst lifetimeValue = contactData.lifetime_value || 0;\nif (lifetimeValue >= 10000) {\n  vipScore += 40;\n  vipTier = 'platinum';\n  vipBenefits = ['Priority Support', 'Exclusive Events', 'Personal Account Manager', 'Free Shipping', 'Early Access'];\n} else if (lifetimeValue >= 5000) {\n  vipScore += 30;\n  vipTier = 'gold';\n  vipBenefits = ['Priority Support', 'Exclusive Events', 'Free Shipping', 'Early Access'];\n} else if (lifetimeValue >= 2000) {\n  vipScore += 20;\n  vipTier = 'silver';\n  vipBenefits = ['Priority Support', 'Free Shipping', 'Early Access'];\n}\n\n// Order frequency factor (25% weight)\nconst orderCount = contactData.order_count || 0;\nif (orderCount >= 20) {\n  vipScore += 25;\n} else if (orderCount >= 10) {\n  vipScore += 15;\n} else if (orderCount >= 5) {\n  vipScore += 10;\n}\n\n// Engagement factor (20% weight)\nconst emailOpenRate = contactData.email_open_rate || 0;\nconst emailClickRate = contactData.email_click_rate || 0;\nif (emailOpenRate >= 0.3 && emailClickRate >= 0.05) {\n  vipScore += 20;\n} else if (emailOpenRate >= 0.2 && emailClickRate >= 0.03) {\n  vipScore += 15;\n} else if (emailOpenRate >= 0.1 && emailClickRate >= 0.02) {\n  vipScore += 10;\n}\n\n// Recency factor (15% weight)\nconst lastOrderDate = contactData.last_order_date ? new Date(contactData.last_order_date) : null;\nif (lastOrderDate) {\n  const daysSinceLastOrder = Math.floor((currentDate - lastOrderDate) / (1000 * 60 * 60 * 24));\n  if (daysSinceLastOrder <= 30) {\n    vipScore += 15;\n  } else if (daysSinceLastOrder <= 90) {\n    vipScore += 10;\n  } else if (daysSinceLastOrder <= 180) {\n    vipScore += 5;\n  }\n}\n\n// Determine if this is a new VIP or status change\nconst previousVipTier = contactData.previous_vip_tier || 'standard';\nconst isNewVip = vipTier !== 'standard' && previousVipTier === 'standard';\nconst isUpgrade = vipTier !== previousVipTier && vipTier !== 'standard' && previousVipTier !== 'standard';\nconst isDowngrade = vipTier === 'standard' && previousVipTier !== 'standard';\n\n// Generate personalized VIP content\nconst vipContent = {\n  tier: vipTier,\n  score: vipScore,\n  benefits: vipBenefits,\n  is_new_vip: isNewVip,\n  is_upgrade: isUpgrade,\n  is_downgrade: isDowngrade,\n  previous_tier: previousVipTier,\n  lifetime_value: lifetimeValue,\n  order_count: orderCount,\n  email_open_rate: emailOpenRate,\n  email_click_rate: emailClickRate\n};\n\nreturn [{\n  json: {\n    contact_id: contactData.id,\n    first_name: contactData.first_name,\n    last_name: contactData.last_name,\n    email: contactData.email,\n    phone: contactData.phone,\n    vip_content: vipContent,\n    analysis_date: currentDate.toISOString().split('T')[0]\n  }\n}];"
      },
      "id": "analyze-vip-status",
      "name": "Analyze VIP Status",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [460, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "condition-1",
              "leftValue": "={{ $json.vip_content.tier }}",
              "rightValue": "standard",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "filter-vip-customers",
      "name": "Filter VIP Customers",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [680, 300]
    },
    {
      "parameters": {
        "functionCode": "// Generate personalized VIP campaign content\nconst data = items[0].json;\nconst vipContent = data.vip_content;\n\nlet subjectLine, campaignName, htmlContent;\n\nif (vipContent.is_new_vip) {\n  subjectLine = `🎉 Congratulations ${data.first_name}! You're now a ${vipContent.tier.toUpperCase()} VIP member!`;\n  campaignName = `VIP Welcome - ${vipContent.tier.toUpperCase()} - ${data.first_name}`;\n  \n  htmlContent = `\n    <!DOCTYPE html>\n    <html>\n    <head>\n        <meta charset=\"utf-8\">\n        <title>Welcome to VIP Status!</title>\n    </head>\n    <body>\n        <div style=\"max-width: 600px; margin: 0 auto; font-family: Arial, sans-serif;\">\n            <div style=\"background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 30px; text-align: center; border-radius: 8px 8px 0 0;\">\n                <h1>🎉 Congratulations, ${data.first_name}!</h1>\n                <h2>You're now a ${vipContent.tier.toUpperCase()} VIP Member!</h2>\n                <p>Your loyalty and support have earned you exclusive benefits and privileges.</p>\n            </div>\n            <div style=\"background-color: white; padding: 30px; border-radius: 0 0 8px 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);\">\n                <h3 style=\"color: #667eea;\">🌟 Your VIP Benefits:</h3>\n                <ul style=\"line-height: 1.8;\">\n                    ${vipContent.benefits.map(benefit => `<li><strong>${benefit}</strong></li>`).join('')}\n                </ul>\n                \n                <div style=\"background-color: #f8f9fa; padding: 20px; margin: 20px 0; border-radius: 8px;\">\n                    <h3>📊 Your VIP Stats:</h3>\n                    <p><strong>Lifetime Value:</strong> $${vipContent.lifetime_value.toLocaleString()}</p>\n                    <p><strong>Total Orders:</strong> ${vipContent.order_count}</p>\n                    <p><strong>VIP Score:</strong> ${vipContent.score}/100</p>\n                </div>\n                \n                <div style=\"text-align: center; margin: 30px 0;\">\n                    <a href=\"https://example.com/vip-dashboard\" style=\"background-color: #667eea; color: white; padding: 15px 30px; text-decoration: none; border-radius: 5px; font-weight: bold;\">Access VIP Dashboard</a>\n                </div>\n                \n                <p>Thank you for being an amazing customer!</p>\n                <p>Best regards,<br>The VIP Team</p>\n            </div>\n        </div>\n    </body>\n    </html>\n  `;\n} else if (vipContent.is_upgrade) {\n  subjectLine = `🚀 VIP Upgrade! You're now ${vipContent.tier.toUpperCase()}, ${data.first_name}!`;\n  campaignName = `VIP Upgrade - ${vipContent.tier.toUpperCase()} - ${data.first_name}`;\n  \n  htmlContent = `\n    <!DOCTYPE html>\n    <html>\n    <head>\n        <meta charset=\"utf-8\">\n        <title>VIP Upgrade Congratulations!</title>\n    </head>\n    <body>\n        <div style=\"max-width: 600px; margin: 0 auto; font-family: Arial, sans-serif;\">\n            <div style=\"background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%); color: white; padding: 30px; text-align: center; border-radius: 8px 8px 0 0;\">\n                <h1>🚀 VIP Upgrade!</h1>\n                <h2>You've been upgraded to ${vipContent.tier.toUpperCase()} status!</h2>\n                <p>From ${vipContent.previous_tier.toUpperCase()} to ${vipContent.tier.toUpperCase()} - amazing progress!</p>\n            </div>\n            <div style=\"background-color: white; padding: 30px; border-radius: 0 0 8px 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);\">\n                <h3 style=\"color: #f5576c;\">🎁 New Benefits Unlocked:</h3>\n                <ul style=\"line-height: 1.8;\">\n                    ${vipContent.benefits.map(benefit => `<li><strong>${benefit}</strong></li>`).join('')}\n                </ul>\n                \n                <div style=\"text-align: center; margin: 30px 0;\">\n                    <a href=\"https://example.com/vip-dashboard\" style=\"background-color: #f5576c; color: white; padding: 15px 30px; text-decoration: none; border-radius: 5px; font-weight: bold;\">Explore New Benefits</a>\n                </div>\n                \n                <p>Keep up the great work!</p>\n                <p>Best regards,<br>The VIP Team</p>\n            </div>\n        </div>\n    </body>\n    </html>\n  `;\n} else {\n  // Regular VIP maintenance message\n  subjectLine = `VIP Update: Your ${vipContent.tier.toUpperCase()} status, ${data.first_name}`;\n  campaignName = `VIP Update - ${vipContent.tier.toUpperCase()} - ${data.first_name}`;\n  \n  htmlContent = `\n    <!DOCTYPE html>\n    <html>\n    <head>\n        <meta charset=\"utf-8\">\n        <title>VIP Status Update</title>\n    </head>\n    <body>\n        <div style=\"max-width: 600px; margin: 0 auto; font-family: Arial, sans-serif;\">\n            <div style=\"background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%); color: white; padding: 30px; text-align: center; border-radius: 8px 8px 0 0;\">\n                <h1>👑 VIP Status Update</h1>\n                <h2>You're maintaining your ${vipContent.tier.toUpperCase()} VIP status!</h2>\n            </div>\n            <div style=\"background-color: white; padding: 30px; border-radius: 0 0 8px 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);\">\n                <h3 style=\"color: #4facfe;\">Your Current Benefits:</h3>\n                <ul style=\"line-height: 1.8;\">\n                    ${vipContent.benefits.map(benefit => `<li><strong>${benefit}</strong></li>`).join('')}\n                </ul>\n                \n                <div style=\"text-align: center; margin: 30px 0;\">\n                    <a href=\"https://example.com/vip-dashboard\" style=\"background-color: #4facfe; color: white; padding: 15px 30px; text-decoration: none; border-radius: 5px; font-weight: bold;\">Access VIP Dashboard</a>\n                </div>\n                \n                <p>Thank you for your continued loyalty!</p>\n                <p>Best regards,<br>The VIP Team</p>\n            </div>\n        </div>\n    </body>\n    </html>\n  `;\n}\n\nreturn [{\n  json: {\n    contact_id: data.contact_id,\n    first_name: data.first_name,\n    last_name: data.last_name,\n    email: data.email,\n    phone: data.phone,\n    vip_tier: vipContent.tier,\n    vip_score: vipContent.score,\n    subject_line: subjectLine,\n    campaign_name: campaignName,\n    html_content: htmlContent,\n    is_new_vip: vipContent.is_new_vip,\n    is_upgrade: vipContent.is_upgrade,\n    analysis_date: data.analysis_date\n  }\n}];"
      },
      "id": "generate-vip-content",
      "name": "Generate VIP Content",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [900, 300]
    },
    {
      "parameters": {
        "resource": "template",
        "operation": "create",
        "templateName": "={{ $json.campaign_name }}",
        "templateContent": "={{ $json.html_content }}"
      },
      "id": "create-vip-template",
      "name": "Create VIP Template",
      "type": "n8n-nodes-bayengage.bayEngage",
      "typeVersion": 1,
      "position": [1120, 300],
      "credentials": {
        "bayEngageApi": {
          "id": "bayengage-credentials",
          "name": "BayEngage API"
        }
      }
    },
    {
      "parameters": {
        "resource": "campaign",
        "operation": "create",
        "campaignName": "={{ $json.campaign_name }}",
        "campaignSubject": "={{ $json.subject_line }}",
        "campaignContent": "={{ $json.html_content }}",
        "recipientList": "vip-customers-list"
      },
      "id": "create-vip-campaign",
      "name": "Create VIP Campaign",
      "type": "n8n-nodes-bayengage.bayEngage",
      "typeVersion": 1,
      "position": [1340, 300],
      "credentials": {
        "bayEngageApi": {
          "id": "bayengage-credentials",
          "name": "BayEngage API"
        }
      }
    },
    {
      "parameters": {
        "resource": "campaign",
        "operation": "send",
        "campaignId": "={{ $json.campaign_id }}"
      },
      "id": "send-vip-campaign",
      "name": "Send VIP Campaign",
      "type": "n8n-nodes-bayengage.bayEngage",
      "typeVersion": 1,
      "position": [1560, 300],
      "credentials": {
        "bayEngageApi": {
          "id": "bayengage-credentials",
          "name": "BayEngage API"
        }
      }
    },
    {
      "parameters": {
        "channel": "#vip",
        "text": "VIP Campaign Sent: {{ $json.first_name }} {{ $json.last_name }} - {{ $json.vip_tier.toUpperCase() }}",
        "blocks": [
          {
            "type": "section",
            "text": {
              "type": "mrkdwn",
              "text": "*👑 VIP Campaign Sent*\n\n*Customer:* {{ $json.first_name }} {{ $json.last_name }}\n*Email:* {{ $json.email }}\n*VIP Tier:* {{ $json.vip_tier.toUpperCase() }}\n*VIP Score:* {{ $json.vip_score }}/100\n*Campaign ID:* {{ $json.campaign_id }}\n\n*Status:*\n• New VIP: {{ $json.is_new_vip ? 'Yes' : 'No' }}\n• Upgrade: {{ $json.is_upgrade ? 'Yes' : 'No' }}\n\n*Timestamp:* {{ new Date().toISOString() }}"
            }
          }
        ]
      },
      "id": "slack-notification",
      "name": "Slack Notification",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2,
      "position": [1780, 300],
      "credentials": {
        "slackApi": {
          "id": "slack-credentials",
          "name": "Slack API"
        }
      }
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1BxiMVs0XRA5nFMdKvBdBZjgmUUqptlbs74OgvE2upms",
          "mode": "id"
        },
        "sheetName": "VIP Customers",
        "columnToMatchOn": "Contact ID",
        "valueToMatchOn": "={{ $json.contact_id }}",
        "valuesToSend": "defineInNode",
        "fieldsUi": {
          "values": [
            {
              "column": "Contact ID",
              "fieldValue": "={{ $json.contact_id }}"
            },
            {
              "column": "Customer Name",
              "fieldValue": "={{ $json.first_name }} {{ $json.last_name }}"
            },
            {
              "column": "Email",
              "fieldValue": "={{ $json.email }}"
            },
            {
              "column": "VIP Tier",
              "fieldValue": "={{ $json.vip_tier.toUpperCase() }}"
            },
            {
              "column": "VIP Score",
              "fieldValue": "={{ $json.vip_score }}"
            },
            {
              "column": "Is New VIP",
              "fieldValue": "={{ $json.is_new_vip }}"
            },
            {
              "column": "Is Upgrade",
              "fieldValue": "={{ $json.is_upgrade }}"
            },
            {
              "column": "Campaign ID",
              "fieldValue": "={{ $json.campaign_id }}"
            },
            {
              "column": "Analysis Date",
              "fieldValue": "={{ $json.analysis_date }}"
            }
          ]
        },
        "options": {}
      },
      "id": "log-vip-customer",
      "name": "Log VIP Customer",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [2000, 300],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "google-sheets-credentials",
          "name": "Google Sheets OAuth2"
        }
      }
    },
    {
      "parameters": {
        "resource": "event",
        "operation": "track",
        "eventName": "vip_campaign_sent",
        "eventProperties": {
          "properties": [
            {
              "name": "contact_id",
              "value": "={{ $json.contact_id }}"
            },
            {
              "name": "vip_tier",
              "value": "={{ $json.vip_tier }}"
            },
            {
              "name": "vip_score",
              "value": "={{ $json.vip_score }}"
            },
            {
              "name": "is_new_vip",
              "value": "={{ $json.is_new_vip }}"
            },
            {
              "name": "is_upgrade",
              "value": "={{ $json.is_upgrade }}"
            }
          ]
        }
      },
      "id": "track-vip-event",
      "name": "Track VIP Event",
      "type": "n8n-nodes-bayengage.bayEngage",
      "typeVersion": 1,
      "position": [2220, 300],
      "credentials": {
        "bayEngageApi": {
          "id": "bayengage-credentials",
          "name": "BayEngage API"
        }
      }
    }
  ],
  "connections": {
    "bayengage-trigger": {
      "main": [
        [
          {
            "node": "analyze-vip-status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "analyze-vip-status": {
      "main": [
        [
          {
            "node": "filter-vip-customers",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "filter-vip-customers": {
      "main": [
        [
          {
            "node": "generate-vip-content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "generate-vip-content": {
      "main": [
        [
          {
            "node": "create-vip-template",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "create-vip-template": {
      "main": [
        [
          {
            "node": "create-vip-campaign",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "create-vip-campaign": {
      "main": [
        [
          {
            "node": "send-vip-campaign",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "send-vip-campaign": {
      "main": [
        [
          {
            "node": "slack-notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "slack-notification": {
      "main": [
        [
          {
            "node": "log-vip-customer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "log-vip-customer": {
      "main": [
        [
          {
            "node": "track-vip-event",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": ["vip", "customer", "loyalty", "premium"],
  "triggerCount": 1,
  "updatedAt": "2024-01-01T00:00:00.000Z",
  "versionId": "1"
}
