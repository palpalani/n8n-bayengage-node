{
  "name": "Forward Attachments",
  "nodes": [
    {
      "parameters": {
        "content": "AI-powered attachment forwarding system using BayEngage. Analyzes email attachments, processes them with AI, and forwards relevant content via BayEngage campaigns to appropriate recipients.",
        "height": 530,
        "width": 1100,
        "color": 5
      },
      "id": "15ea4b74-7127-48af-9f59-629bb14a2bd4",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -480,
        -240
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "forward-attachments"
      },
      "id": "8a67f7cf-b9f0-4c6c-9560-e9d746f29c98",
      "name": "Webhook Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -300,
        0
      ]
    },
    {
      "parameters": {
        "chunkSize": 400,
        "chunkOverlap": 40
      },
      "id": "9bad17f7-55c2-41d5-99dd-ba0fd211777b",
      "name": "Text Splitter",
      "type": "@n8n/n8n-nodes-langchain.textSplitterCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        -130,
        0
      ]
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "e135820c-3de0-4731-b76b-1ca54b2f6ed3",
      "name": "Embeddings",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        70,
        0
      ],
      "credentials": {
        "openAiApi": {
          "id": "OPENAI_API",
          "name": "OpenAI"
        }
      }
    },
    {
      "parameters": {
        "mode": "insert",
        "options": {},
        "pineconeIndex": {
          "__rl": true,
          "value": "forward_attachments",
          "mode": "list",
          "cachedResultName": "forward_attachments"
        }
      },
      "id": "dd4b9606-bfb4-44bd-a9f8-fbdce7127924",
      "name": "Pinecone Insert",
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1,
      "position": [
        270,
        0
      ],
      "credentials": {
        "pineconeApi": {
          "id": "PINECONE_API",
          "name": "Pinecone account"
        }
      }
    },
    {
      "parameters": {
        "pineconeIndex": {
          "__rl": true,
          "value": "forward_attachments",
          "mode": "list",
          "cachedResultName": "forward_attachments"
        }
      },
      "id": "fb46a67f-195f-44a8-ae68-383e70e3ca41",
      "name": "Pinecone Query",
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1,
      "position": [
        270,
        -180
      ],
      "credentials": {
        "pineconeApi": {
          "id": "PINECONE_API",
          "name": "Pinecone account"
        }
      }
    },
    {
      "parameters": {
        "name": "Pinecone",
        "description": "Vector context"
      },
      "id": "3ef19169-0bbf-4f8c-a01e-e66d7c8e9c92",
      "name": "Vector Tool",
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1,
      "position": [
        450,
        -180
      ]
    },
    {
      "parameters": {},
      "id": "8a4d7ddf-836b-49b9-8a57-d6bf92b44cdd",
      "name": "Window Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        450,
        -40
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "e208345d-1ccb-43fa-ae90-5f90e8d40d9a",
      "name": "Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        450,
        -340
      ],
      "credentials": {
        "openAiApi": {
          "id": "OPENAI_API",
          "name": "OpenAI"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "Handle data",
        "options": {
          "systemMessage": "You are an assistant for Forward Attachments. Analyze email attachments and their content to determine the most appropriate recipients and forwarding strategy. Consider content relevance, urgency, and recipient preferences. Return a JSON object with forwarding recommendations including recipient list, subject line, and content summary."
        }
      },
      "id": "06cce445-64df-4a85-a1d0-e5d3960583b1",
      "name": "RAG Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1,
      "position": [
        720,
        -40
      ]
    },
    {
      "parameters": {
        "resource": "contact",
        "operation": "list",
        "limit": 50
      },
      "id": "bayengage-contact-list",
      "name": "BayEngage List Contacts",
      "type": "n8n-nodes-bayengage.bayEngage",
      "typeVersion": 1,
      "position": [
        950,
        -40
      ],
      "credentials": {
        "bayEngageApi": {
          "id": "BAYENGAGE_API",
          "name": "BayEngage API"
        }
      }
    },
    {
      "parameters": {
        "resource": "template",
        "operation": "create",
        "templateName": "Forwarded Attachment - {{ $json.attachment_name || 'Document' }}",
        "templateContent": "={{ $('RAG Agent').item.json.content_summary || $('RAG Agent').item.json.output }}"
      },
      "id": "bayengage-template-create",
      "name": "BayEngage Create Template",
      "type": "n8n-nodes-bayengage.bayEngage",
      "typeVersion": 1,
      "position": [
        950,
        -200
      ],
      "credentials": {
        "bayEngageApi": {
          "id": "BAYENGAGE_API",
          "name": "BayEngage API"
        }
      }
    },
    {
      "parameters": {
        "resource": "campaign",
        "operation": "create",
        "templateId": "={{ $('BayEngage Create Template').item.json.id }}",
        "contactId": "={{ $json.id }}",
        "subject": "={{ $('RAG Agent').item.json.subject || 'Forwarded: ' + ($json.attachment_name || 'Document') }}",
        "content": "={{ $('RAG Agent').item.json.content_summary || $('RAG Agent').item.json.output }}"
      },
      "id": "bayengage-campaign-create",
      "name": "BayEngage Create Campaign",
      "type": "n8n-nodes-bayengage.bayEngage",
      "typeVersion": 1,
      "position": [
        1200,
        -40
      ],
      "credentials": {
        "bayEngageApi": {
          "id": "BAYENGAGE_API",
          "name": "BayEngage API"
        }
      }
    },
    {
      "parameters": {
        "resource": "campaign",
        "operation": "send",
        "campaignId": "={{ $json.id }}"
      },
      "id": "bayengage-campaign-send",
      "name": "BayEngage Send Campaign",
      "type": "n8n-nodes-bayengage.bayEngage",
      "typeVersion": 1,
      "position": [
        1450,
        -40
      ],
      "credentials": {
        "bayEngageApi": {
          "id": "BAYENGAGE_API",
          "name": "BayEngage API"
        }
      }
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "SHEET_ID",
          "mode": "list",
          "cachedResultName": "Forward Attachments"
        },
        "sheetName": {
          "__rl": true,
          "value": "Log",
          "mode": "list",
          "cachedResultName": "Log"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": "Status,Attachment Name,Recipient Email,Template ID,Campaign ID,Send Status",
          "schema": [
            {
              "name": "Status",
              "value": "={{ $json.success ? 'Forwarded' : 'Failed' }}"
            },
            {
              "name": "Attachment Name",
              "value": "={{ $json.attachment_name || 'Unknown' }}"
            },
            {
              "name": "Recipient Email",
              "value": "={{ $json.email }}"
            },
            {
              "name": "Template ID",
              "value": "={{ $('BayEngage Create Template').item.json.id }}"
            },
            {
              "name": "Campaign ID",
              "value": "={{ $('BayEngage Create Campaign').item.json.id }}"
            },
            {
              "name": "Send Status",
              "value": "={{ $('BayEngage Send Campaign').item.json.status || 'Pending' }}"
            }
          ]
        }
      },
      "id": "df7aa3a4-ff0d-4289-bbc1-c06bcd3596b7",
      "name": "Append Sheet",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        1700,
        -40
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "SHEETS_API",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "channel": "#alerts",
        "text": "Forward Attachments error: {{ $json.error.message }}"
      },
      "id": "d59d6048-34a9-481e-b729-51bed8088528",
      "name": "Slack Alert",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 1,
      "position": [
        1700,
        120
      ],
      "credentials": {
        "slackApi": {
          "id": "SLACK_API",
          "name": "Slack"
        }
      }
    }
  ],
  "connections": {
    "Webhook Trigger": {
      "main": [
        [
          {
            "node": "Text Splitter",
            "type": "main",
            "index": 0
          },
          {
            "node": "Window Memory",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Text Splitter": {
      "main": [
        [
          {
            "node": "Embeddings",
            "type": "main",
            "index": 0
          }
        ]
      ],
      "ai_textSplitter": [
        [
          {
            "node": "Pinecone Insert",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Insert",
            "type": "ai_embedding",
            "index": 0
          },
          {
            "node": "Pinecone Query",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Pinecone Insert": {
      "ai_document": [
        []
      ]
    },
    "Pinecone Query": {
      "ai_vectorStore": [
        [
          {
            "node": "Vector Tool",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "Vector Tool": {
      "ai_tool": [
        [
          {
            "node": "RAG Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Window Memory": {
      "ai_memory": [
        [
          {
            "node": "RAG Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "RAG Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "RAG Agent": {
      "main": [
        [
          {
            "node": "BayEngage List Contacts",
            "type": "main",
            "index": 0
          },
          {
            "node": "BayEngage Create Template",
            "type": "main",
            "index": 0
          }
        ]
      ],
      "onError": [
        [
          {
            "node": "Slack Alert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "BayEngage List Contacts": {
      "main": [
        [
          {
            "node": "BayEngage Create Campaign",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "BayEngage Create Template": {
      "main": [
        [
          {
            "node": "BayEngage Create Campaign",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "BayEngage Create Campaign": {
      "main": [
        [
          {
            "node": "BayEngage Send Campaign",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "BayEngage Send Campaign": {
      "main": [
        [
          {
            "node": "Append Sheet",
            "type": "main",
            "index": 0
          }
        ]
      ],
      "onError": [
        [
          {
            "node": "Slack Alert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "triggerCount": 1
}
